<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.AppointmentMapper" >
  <!-- 自定义的ResultMap -->
  <resultMap id="AppointAndBookResultMap" type="com.po.AppointmentCustom" >
  	<id column="book_id" property="bookId" jdbcType="BIGINT" />
    <id column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="appoint_time" property="appointTime" jdbcType="TIMESTAMP" />
    <association property="book" javaType="com.po.Book">
	    <id column="book_id" property="bookId" jdbcType="BIGINT" />
	    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
	    <result column="number" property="number" jdbcType="INTEGER" />
	    <result column="author" property="author" jdbcType="VARCHAR" />
	    <result column="price" property="price" jdbcType="INTEGER" />
	    <result column="introd" property="introd" jdbcType="VARCHAR" />
	    <result column="pic" property="pic" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <resultMap id="BaseResultMap" type="com.po.Appointment" >
    <id column="book_id" property="bookId" jdbcType="BIGINT" />
    <id column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="appoint_time" property="appointTime" jdbcType="TIMESTAMP" />
    <result column="appoint_num" property="appointNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    book_id, student_id, appoint_time, appoint_num
  </sql>
  
  <!-- 自定义的select查询 -->
  <select id="selectAppointsOfStu" resultMap="AppointAndBookResultMap" parameterType="int" >
  	select * from appointment a inner join book b where a.book_id = b.book_id
  	<if test="_parameter != null">
  		and a.student_id = #{stuId,jdbcType=BIGINT}
  	</if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.po.AppointmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appointment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.po.AppointmentKey" >
    select 
    <include refid="Base_Column_List" />
    from appointment
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.po.AppointmentKey" >
    delete from appointment
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.po.AppointmentExample" >
    delete from appointment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.po.Appointment" >
    insert into appointment (book_id, student_id, appoint_time, 
      appoint_num)
    values (#{bookId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{appointTime,jdbcType=TIMESTAMP}, 
      #{appointNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.po.Appointment" >
    insert into appointment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="appointTime != null" >
        appoint_time,
      </if>
      <if test="appointNum != null" >
        appoint_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="appointTime != null" >
        #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointNum != null" >
        #{appointNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.po.AppointmentExample" resultType="java.lang.Integer" >
    select count(*) from appointment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update appointment
    <set >
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.appointTime != null" >
        appoint_time = #{record.appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appointNum != null" >
        appoint_num = #{record.appointNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update appointment
    set book_id = #{record.bookId,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      appoint_time = #{record.appointTime,jdbcType=TIMESTAMP},
      appoint_num = #{record.appointNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.po.Appointment" >
    update appointment
    <set >
      <if test="appointTime != null" >
        appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointNum != null" >
        appoint_num = #{appointNum,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.po.Appointment" >
    update appointment
    set appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      appoint_num = #{appointNum,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=BIGINT}
      and student_id = #{studentId,jdbcType=BIGINT}
  </update>
</mapper>